"""Initial migration

Revision ID: 4bc23cd31aec
Revises: 
Create Date: 2025-08-20 23:50:42.289989

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4bc23cd31aec'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_messages_conversation'))
        batch_op.drop_index(batch_op.f('idx_messages_sender'))
        batch_op.drop_index(batch_op.f('idx_messages_unread'))

    op.drop_table('messages')
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_conversations_participants'))

    op.drop_table('conversations')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('parent_comment_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_comments_post_id'))
        batch_op.drop_index(batch_op.f('idx_comments_user_id'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])
        batch_op.create_foreign_key(None, 'comments', ['parent_comment_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('follows', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               nullable=False)
        batch_op.alter_column('follower_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('following_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_follows_follower_id'))
        batch_op.drop_index(batch_op.f('idx_follows_following_id'))
        batch_op.create_unique_constraint('_follower_following', ['follower_id', 'following_id'])
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['following_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['follower_id'], ['id'])

    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=36),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_likes_post_id'))
        batch_op.drop_index(batch_op.f('idx_likes_user_id'))
        batch_op.create_unique_constraint('_user_post_like', ['user_id', 'post_id'])
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])

    with op.batch_alter_table('post_images', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('image_url',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=False)
        batch_op.alter_column('position',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_post_images_post_id'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])
        batch_op.drop_column('created_at')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('location',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('is_archived',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('comments_disabled',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_posts_created_at'))
        batch_op.drop_index(batch_op.f('idx_posts_user_id'))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('saved_posts', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_saved_posts_post_id'))
        batch_op.drop_index(batch_op.f('idx_saved_posts_user_id'))
        batch_op.create_unique_constraint('_user_post_save', ['user_id', 'post_id'])
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'])
        batch_op.drop_column('id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(length=30),
               existing_nullable=False)
        batch_op.alter_column('profile_picture',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.alter_column('website',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('is_private',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('is_verified',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=True)
        batch_op.alter_column('hashed_password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_users_email'))
        batch_op.drop_index(batch_op.f('idx_users_username'))
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_index(batch_op.f('idx_users_username'), ['username'], unique=False)
        batch_op.create_index(batch_op.f('idx_users_email'), ['email'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('hashed_password',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('is_verified',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('is_private',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('website',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('profile_picture',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=30),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('saved_posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('_user_post_save', type_='unique')
        batch_op.create_index(batch_op.f('idx_saved_posts_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_saved_posts_post_id'), ['post_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('post_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_posts_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_posts_created_at'), ['created_at'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('comments_disabled',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('is_archived',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('location',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('post_images', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_post_images_post_id'), ['post_id'], unique=False)
        batch_op.alter_column('position',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('image_url',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('_user_post_like', type_='unique')
        batch_op.create_index(batch_op.f('idx_likes_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_likes_post_id'), ['post_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('post_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('follows', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['following_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['follower_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('_follower_following', type_='unique')
        batch_op.create_index(batch_op.f('idx_follows_following_id'), ['following_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_follows_follower_id'), ['follower_id'], unique=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('following_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('follower_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'comments', ['parent_comment_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_comments_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_comments_post_id'), ['post_id'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('parent_comment_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)

    op.create_table('conversations',
    sa.Column('id', sa.TEXT(), nullable=True),
    sa.Column('participant1_id', sa.TEXT(), nullable=False),
    sa.Column('participant2_id', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.TEXT(), server_default=sa.text("(datetime('now'))"), nullable=False),
    sa.Column('updated_at', sa.TEXT(), server_default=sa.text("(datetime('now'))"), nullable=False),
    sa.ForeignKeyConstraint(['participant1_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['participant2_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('participant1_id', 'participant2_id')
    )
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_conversations_participants'), ['participant1_id', 'participant2_id'], unique=False)

    op.create_table('messages',
    sa.Column('id', sa.TEXT(), nullable=True),
    sa.Column('conversation_id', sa.TEXT(), nullable=False),
    sa.Column('sender_id', sa.TEXT(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('message_type', sa.TEXT(), server_default=sa.text("'text'"), nullable=True),
    sa.Column('is_read', sa.INTEGER(), server_default=sa.text('0'), nullable=True),
    sa.Column('created_at', sa.TEXT(), server_default=sa.text("(datetime('now'))"), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_messages_unread'), ['conversation_id', 'is_read'], unique=False)
        batch_op.create_index(batch_op.f('idx_messages_sender'), ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_messages_conversation'), ['conversation_id', 'created_at'], unique=False)

    # ### end Alembic commands ###
